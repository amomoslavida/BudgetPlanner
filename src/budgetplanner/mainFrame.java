/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package budgetplanner;

import static budgetplanner.graphFrame.getBudgetName;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Bulut
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
       
        DatabaseManagement dbManager = new DatabaseManagement();
        
        
            budgets = dbManager.getAllBudgets(budgets);
           
            
          //  budgetItems = dbManager.getAllItems(budgetItems, budgets);
   
     
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogCreateBudget = new javax.swing.JDialog();
        textFieldBudgetName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DateFormat format = new SimpleDateFormat("dd-MM-yyyy");
        jFormattedTextFieldStartDate = new javax.swing.JFormattedTextField(format);
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFieldEndDate = new javax.swing.JFormattedTextField(format);
        jScrollPane1 = new javax.swing.JScrollPane();
        Object[][] arr = new Object[budgets.size()][3];
        for (int i = 0; i < arr.length; i++) {
            arr[i][0]= budgets.get(i).getBudgetName();
            arr[i][1]= budgets.get(i).getBudgetStartDate();
            arr[i][2]= budgets.get(i).getBudgetEndDate();

        }
        jTableBudgets = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableBudgetItems = new javax.swing.JTable();
        buttonCreateNewBudget = new javax.swing.JButton();
        buttonRemoveBudget = new javax.swing.JButton();
        buttonAddBudgetItem = new javax.swing.JButton();
        buttonRemoveBudgetItem = new javax.swing.JButton();
        buttonShowGraph = new javax.swing.JButton();
        jButtonUploadReceipt = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldItemName = new javax.swing.JTextField();
        NumberFormat frmt = NumberFormat.getNumberInstance();
        frmt.setMinimumFractionDigits(3);

        //format.setRoundingMode(RoundingMode.HALF_UP);
        jFormattedTextFieldAmount = new javax.swing.JFormattedTextField(frmt);
        jComboBoxCategory = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabelTotalIncome = new javax.swing.JLabel();
        jLabelTotalOutcome = new javax.swing.JLabel();

        dialogCreateBudget.setLocation(new java.awt.Point(500, 500));
        dialogCreateBudget.setResizable(false);

        javax.swing.GroupLayout dialogCreateBudgetLayout = new javax.swing.GroupLayout(dialogCreateBudget.getContentPane());
        dialogCreateBudget.getContentPane().setLayout(dialogCreateBudgetLayout);
        dialogCreateBudgetLayout.setHorizontalGroup(
            dialogCreateBudgetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 468, Short.MAX_VALUE)
        );
        dialogCreateBudgetLayout.setVerticalGroup(
            dialogCreateBudgetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Budget Name :");

        jLabel2.setText("Start Date :");

        jFormattedTextFieldStartDate.setToolTipText("Date Format : 01-01-2001");
        jFormattedTextFieldStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldStartDateActionPerformed(evt);
            }
        });

        jLabel3.setText("End Date :");

        jFormattedTextFieldEndDate.setToolTipText("Date Format : 01-01-2001");

        DefaultTableModel tableModel = new DefaultTableModel(arr,
            new String [] {
                "Budget Name", "Budget Start Date", "Budget End Date"
            }) {

                @Override
                public boolean isCellEditable(int row, int column) {
                    //all cells false
                    return false;
                }
            };
            jTableBudgets.setModel(tableModel);
            TableColumnModel columnModel = jTableBudgets.getColumnModel();
            ListSelectionModel selectionModel = columnModel.getSelectionModel();
            selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            jTableBudgets.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTableBudgetsMouseClicked(evt);
                }
            });
            jScrollPane1.setViewportView(jTableBudgets);

            DefaultTableModel tableModel2 = new DefaultTableModel( new Object [][] {},
                new String [] {
                    "Name", "Amount", "Category"
                }) {

                    @Override
                    public boolean isCellEditable(int row, int coloumn) {
                        if(coloumn==0){
                            return false;
                        }else return true;

                    }
                };
                jTableBudgetItems.setModel(tableModel2);
                jScrollPane2.setViewportView(jTableBudgetItems);

                buttonCreateNewBudget.setText("Create New Budget");
                buttonCreateNewBudget.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        buttonCreateNewBudgetActionPerformed(evt);
                    }
                });

                buttonRemoveBudget.setText("Remove Budget");
                buttonRemoveBudget.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        buttonRemoveBudgetActionPerformed(evt);
                    }
                });

                buttonAddBudgetItem.setText("Add Budget Item");
                buttonAddBudgetItem.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        buttonAddBudgetItemActionPerformed(evt);
                    }
                });

                buttonRemoveBudgetItem.setText("Remove Budget Item");
                buttonRemoveBudgetItem.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        buttonRemoveBudgetItemActionPerformed(evt);
                    }
                });

                buttonShowGraph.setText("Show In Graph");
                buttonShowGraph.setToolTipText("Only outcomes ( negative amounts) will be shown.");
                buttonShowGraph.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        buttonShowGraphActionPerformed(evt);
                    }
                });

                jButtonUploadReceipt.setText("Updload  Receipt");
                jButtonUploadReceipt.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonUploadReceiptActionPerformed(evt);
                    }
                });

                jLabel4.setText("Item Name :");

                jLabel5.setText("Amount :");

                jLabel6.setText("Category :");

                jFormattedTextFieldAmount.setToolTipText("Please enter negative amounts for outcomes and positive for incomes.");
                jFormattedTextFieldAmount.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jFormattedTextFieldAmountActionPerformed(evt);
                    }
                });

                jComboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose", "Food", "Accomodation", "Health", "Social Events", "Education", "Utilities", "Clothes", "Transportaion", "Savings" }));

                jLabel7.setText("TOTAL: ");

                jLabel8.setText("INCOME");

                jLabel9.setText("OUTCOME");

                jLabelTotalIncome.setVisible(false);

                jLabelTotalOutcome.setVisible(false);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 408, Short.MAX_VALUE)
                                        .addComponent(buttonRemoveBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelTotalIncome)
                                                .addGap(0, 44, Short.MAX_VALUE))
                                            .addComponent(jButtonUploadReceipt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(buttonRemoveBudgetItem, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)
                                                .addComponent(buttonShowGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabelTotalOutcome, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jSeparator2))))
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(jFormattedTextFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(25, 25, 25))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(18, 18, 18)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(textFieldBudgetName, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jFormattedTextFieldEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(buttonCreateNewBudget)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonAddBudgetItem, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldItemName)
                                    .addComponent(jFormattedTextFieldAmount)
                                    .addComponent(jComboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(227, 227, 227))
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabelTotalIncome)
                                        .addComponent(jLabel9))
                                    .addComponent(jLabelTotalOutcome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)))
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonRemoveBudgetItem)
                            .addComponent(buttonShowGraph)
                            .addComponent(jButtonUploadReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonRemoveBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(buttonCreateNewBudget))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textFieldBudgetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jFormattedTextFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jFormattedTextFieldEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextFieldItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jFormattedTextFieldAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jComboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addComponent(buttonAddBudgetItem)))
                        .addContainerGap(89, Short.MAX_VALUE))
                );

                pack();
            }// </editor-fold>//GEN-END:initComponents

    private void buttonRemoveBudgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveBudgetActionPerformed
        int rowToBeDeleted =jTableBudgets.getSelectedRow(); // TODO: Çoklu seçimi engelleyemezsen burada çoklu row kontrolü yapıp seçililerin hepsini silmelisin ?
                                               
        // Db'den sileceğimiz id'yi almak için..
        
        DatabaseManagement db=new DatabaseManagement();
        db.removeBudget(budgets.get(rowToBeDeleted));  //TODO budegts array listi her koşuldu tablo datasıyla senkronize gitmeli ! çok önemli. Tablonun güncellendiği her yerde arraylist de güncellenmeli.
        DefaultTableModel model = (DefaultTableModel) jTableBudgets.getModel();
        model.removeRow(rowToBeDeleted);
        budgets.remove(rowToBeDeleted);
        
        DefaultTableModel tableModel = new DefaultTableModel( new Object [][] {},
                new String [] {
                    "Name", "Amount", "Category"
                }) {

                    @Override
                    public boolean isCellEditable(int row, int coloumn) {
                        if(coloumn==0){
                            return false;
                        }else return true;

                    }
                };
                jTableBudgetItems.setModel(tableModel);
                jLabelTotalIncome.setText(new Double(0).toString());
                jLabelTotalOutcome.setText(new Double(0).toString());
                
    }//GEN-LAST:event_buttonRemoveBudgetActionPerformed

    private void jButtonUploadReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadReceiptActionPerformed
        UploadFrame uploadFrame = new UploadFrame();
        uploadFrame.setVisible(true);
        
    }//GEN-LAST:event_jButtonUploadReceiptActionPerformed

    private void buttonAddBudgetItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddBudgetItemActionPerformed
       if(jTextFieldItemName.getText().isEmpty() || jFormattedTextFieldAmount.getText().isEmpty() || getCategory(jComboBoxCategory.getSelectedIndex()).isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter name ,amount and category");
            return;
       }
        
        
       if(jTableBudgets.getSelectedRow()==-1){
           System.out.println("error"+ jTableBudgets.getSelectedRow());
           JOptionPane.showMessageDialog(null, "Please choose a budget from left table!");
           
       }
        try{
          DatabaseManagement db = new DatabaseManagement();
          BudgetItem item = new BudgetItem();
          item.setItemName(jTextFieldItemName.getText());
          item.setItemId(budgetItems.size());
          NumberFormat nf = NumberFormat.getInstance();
          item.setAmount(nf.parse(jFormattedTextFieldAmount.getText()).doubleValue());
          item.setCategory(getCategory(jComboBoxCategory.getSelectedIndex()));
          db.insertBudgetItem(budgets.get(jTableBudgets.getSelectedRow()).getBudgetName(), item);
          budgetItems.add(item);
          DefaultTableModel model = (DefaultTableModel) jTableBudgetItems.getModel();
          model.addRow(new Object[]{budgetItems.get(budgetItems.size()-1).getItemName(),budgetItems.get(budgetItems.size()-1).getAmount(), budgetItems.get(budgetItems.size()-1).getCategory()});
        }catch(SQLException e){
            System.out.println("I got a exception yay");
           System.out.println(e.getMessage());
        } catch (ParseException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }  
         
        jTextFieldItemName.setText(null);
        jFormattedTextFieldAmount.setText(null);
        jComboBoxCategory.setSelectedItem(null);
        setTotalValues();
        
    }//GEN-LAST:event_buttonAddBudgetItemActionPerformed

    private void jFormattedTextFieldStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldStartDateActionPerformed

    private void buttonCreateNewBudgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateNewBudgetActionPerformed
       if(textFieldBudgetName.getText().isEmpty() || jFormattedTextFieldEndDate.getText().isEmpty() || jFormattedTextFieldEndDate.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter name , start date and end date");
            return;
       }
       for(int k =0; k<budgets.size();k++){
           if(budgets.get(k).getBudgetName().equals(textFieldBudgetName.getText())){
               JOptionPane.showMessageDialog(null, " Entered name is already exists. Please choose another one.");
               return;
           }
       }
       
   System.out.println("HMhere");
          Budget bdgtToAdd=new Budget (textFieldBudgetName.getText(),jFormattedTextFieldStartDate.getText(), jFormattedTextFieldEndDate.getText());
            try {
             DatabaseManagement db = new DatabaseManagement();
             System.out.println("HMhere2");
             db.createBudgetTable(textFieldBudgetName.getText());
             
            System.out.println("HMhere3");
            
           
            db.insertBudget(bdgtToAdd);
            System.out.println("HMhere4");
              // TODO: aynı isimde db yaratılmamalı (validasyon ekle)
            
   /*          budgetItems = db.getBudgetTable(textFieldBudgetName.getText());
      
      Object[][] arrItems = new Object[budgetItems.size()][3];
        for (int i = 0; i < arrItems.length; i++) {
            
            arrItems[i][0]= budgetItems.get(i).getItemName();
            arrItems[i][1]= budgetItems.get(i).getAmount();
            arrItems[i][2]= budgetItems.get(i).getCategory();}
       DefaultTableModel tableModel2 = new DefaultTableModel( arrItems,
                    new String [] {
                         "Name", "Amount", "Category"
                    }) {

                        @Override
                        public boolean isCellEditable(int row, int coloumn) {
                            if(coloumn==0){
                                return false;
                            }else return true;

                        }
                    };
                    jTableBudgetItems.setModel(tableModel2);
                    textFieldBudgetName.setText("");
                    jFormattedTextFieldEndDate.setText("");
                    jFormattedTextFieldStartDate.setText("");
        */            
       
                    
        } catch (SQLException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            ex.getMessage();
        }
            
            budgets.add(bdgtToAdd);
            DefaultTableModel model = (DefaultTableModel) jTableBudgets.getModel();
            model.addRow(new Object[]{bdgtToAdd.getBudgetName(),bdgtToAdd.getBudgetStartDate(), bdgtToAdd.getBudgetEndDate()});
        
    }//GEN-LAST:event_buttonCreateNewBudgetActionPerformed

    private void jTableBudgetsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBudgetsMouseClicked
      System.out.println("row clicked number"+jTableBudgets.getSelectedRow());
      DatabaseManagement db = new DatabaseManagement();
      
      budgetItems = db.getBudgetTable(budgets.get(jTableBudgets.getSelectedRow()).getBudgetName());
      
      Object[][] arrItems = new Object[budgetItems.size()][3];
        for (int i = 0; i < arrItems.length; i++) {
            arrItems[i][0]= budgetItems.get(i).getItemName();
            arrItems[i][1]= budgetItems.get(i).getAmount();
            arrItems[i][2]= budgetItems.get(i).getCategory();}
       DefaultTableModel tableModel2 = new DefaultTableModel( arrItems,
                    new String [] {
                         "Name", "Amount", "Category"
                    }) {

                        @Override
                        public boolean isCellEditable(int row, int coloumn) {
                           
                                return false;
                           

                        }
                    };
                    jTableBudgetItems.setModel(tableModel2);
                    
     setTotalValues();
      
      
    }//GEN-LAST:event_jTableBudgetsMouseClicked

    private void buttonRemoveBudgetItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveBudgetItemActionPerformed
        int rowToBeDeleted =jTableBudgetItems.getSelectedRow(); // TODO: Çoklu seçimi engelleyemezsen burada çoklu row kontrolü yapıp seçililerin hepsini silmelisin ?
                                               
        // Db'den sileceğimiz id'yi almak için..
        
        DatabaseManagement db=new DatabaseManagement();
        db.removeItem(budgetItems.get(rowToBeDeleted), budgets.get(rowToBeDeleted).getBudgetName());  //TODO budegts array listi her koşuldu tablo datasıyla senkronize gitmeli ! çok önemli. Tablonun güncellendiği her yerde arraylist de güncellenmeli.
        DefaultTableModel model = (DefaultTableModel) jTableBudgetItems.getModel();
        model.removeRow(rowToBeDeleted);
        budgetItems.remove(rowToBeDeleted);
        setTotalValues();
        
        
        
    }//GEN-LAST:event_buttonRemoveBudgetItemActionPerformed

    private void jFormattedTextFieldAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldAmountActionPerformed

    private void buttonShowGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShowGraphActionPerformed
        
       if(jTableBudgets.getSelectedRow()==-1){
             JOptionPane.showMessageDialog(null, "Please choose a budget first!");
       } 
       graphFrame gFrame = new graphFrame(budgets.get(jTableBudgets.getSelectedRow()).getBudgetName());
       gFrame.setVisible(true);
       gFrame.pack();
    }//GEN-LAST:event_buttonShowGraphActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }
   
    public String getCategory(int a ){
        switch(a){
           case 1:{
              return "Food";
           }
           case 2:{
               return "Accomodation";
           }
           case 3: {
              return "Health";
           }
           case 4: {
               return "Social Events";
           }
           case 5: {
               
              return "Education";
           }
           case 6: {
               return "Utilities";
           }
           case 7: {
               return "Clothes";
           }
           case 8: {
              return "Transportaion";
           }case 9: {
               return "Savings";
           }case 0: {
               JOptionPane.showMessageDialog(null, "Please choose a category for the item!");
               return"";
           }
           default: System.out.println("Invalid category"); 
           return"";
       }
    }
    public void setTotalValues(){
         Double income = new Double(0);
      Double outcome = new Double(0);
      
      for(int i =0;i<budgetItems.size();i++){
          if(budgetItems.get(i).getAmount()>0){
              income =income + budgetItems.get(i).getAmount();
          }else{
              outcome =outcome + budgetItems.get(i).getAmount();
          }
      }
      jLabelTotalIncome.setText(income.toString());
      jLabelTotalIncome.setVisible(true);
      jLabelTotalOutcome.setText(outcome.toString());
      jLabelTotalOutcome.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddBudgetItem;
    private javax.swing.JButton buttonCreateNewBudget;
    private javax.swing.JButton buttonRemoveBudget;
    private javax.swing.JButton buttonRemoveBudgetItem;
    private javax.swing.JButton buttonShowGraph;
    private javax.swing.JDialog dialogCreateBudget;
    private javax.swing.JButton jButtonUploadReceipt;
    private javax.swing.JComboBox<String> jComboBoxCategory;
    private javax.swing.JFormattedTextField jFormattedTextFieldAmount;
    private javax.swing.JFormattedTextField jFormattedTextFieldEndDate;
    private javax.swing.JFormattedTextField jFormattedTextFieldStartDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTotalIncome;
    private javax.swing.JLabel jLabelTotalOutcome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTableBudgetItems;
    private javax.swing.JTable jTableBudgets;
    private javax.swing.JTextField jTextFieldItemName;
    private javax.swing.JTextField textFieldBudgetName;
    // End of variables declaration//GEN-END:variables
    ArrayList <Budget> budgets = new ArrayList(); 
    ArrayList <BudgetItem> budgetItems = new ArrayList();
   
}
