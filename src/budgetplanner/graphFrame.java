/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package budgetplanner;

import java.util.ArrayList;
import javax.swing.JPanel;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.ui.RefineryUtilities;

/**
 *
 * @author Bulut
 */
public class graphFrame extends javax.swing.JFrame {

    /**
     * Creates new form graphFrame
     */
    public graphFrame(String budgetName) {

        setBudgetName(budgetName);
        System.out.println("got budget name in constctor" + getBudgetName());
        setContentPane(createDemoPanel());

    }

    private static String budgetName;

    public static String getBudgetName() {
        return budgetName;
    }

    public static void setBudgetName(String budgetName) {
        graphFrame.budgetName = budgetName;
    }

    private static JFreeChart createChart(PieDataset dataset) {
        JFreeChart chart = ChartFactory.createPieChart(
                getBudgetName(), // chart title 
                dataset, // data    
                true, // include legend   
                true,
                false);

        return chart;
    }

    public static JPanel createDemoPanel() {
        System.out.println("am i heresecond ?");
        JFreeChart chart = createChart(setGraphData());
        return new ChartPanel(chart);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 800));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 844, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 597, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                graphFrame demo = new graphFrame(getBudgetName());
                System.out.println("main is running with.. ..." + getBudgetName());
                demo.setSize(1000, 1000);
                RefineryUtilities.centerFrameOnScreen(demo);
                demo.setVisible(true);

            }
        });
    }

    /* public static void main(String args[]) {
        
        System.out.println("am i here first ?");
        /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
 /*    try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(graphFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(graphFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(graphFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(graphFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
 /*  java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
      graphFrame demo = new graphFrame(getBudgetName()); 
      System.out.println("main is running with.. ..."+getBudgetName());
      demo.setSize( 1000 , 1000 );    
      RefineryUtilities.centerFrameOnScreen( demo );    
      demo.setVisible( true );
               
            }
        });
    } */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
private static PieDataset setGraphData() {
        DefaultPieDataset dataset = new DefaultPieDataset();
        DatabaseManagement db = new DatabaseManagement();
        ArrayList<BudgetItem> graphItems = new ArrayList<BudgetItem>();
        ArrayList<BudgetData> budgetData = new ArrayList<BudgetData>();
        System.out.println("this is table ..." + getBudgetName());
        graphItems = db.getBudgetTable(getBudgetName());

        budgetData.add(new BudgetData("Food", new Double(0)));
        budgetData.add(new BudgetData("Accomodation", new Double(0)));
        budgetData.add(new BudgetData("Transportation", new Double(0)));
        budgetData.add(new BudgetData("Savings", new Double(0)));
        budgetData.add(new BudgetData("Utilities", new Double(0)));
        budgetData.add(new BudgetData("Clothes", new Double(0)));
        budgetData.add(new BudgetData("Health", new Double(0)));
        budgetData.add(new BudgetData("Education", new Double(0)));
        budgetData.add(new BudgetData("Social Events", new Double(0)));

        for (int i = 0; i < graphItems.size(); i++) {

            if (graphItems.get(i).getAmount() < 0) {
                Double negative = graphItems.get(i).getAmount();
                graphItems.get(i).setAmount(-negative);
                System.out.println(-negative);
                System.out.println(graphItems.get(i).getAmount());

                switch (graphItems.get(i).getCategory()) {

                    case "Food": {
                        budgetData.get(0).setAmount(budgetData.get(0).getAmount() + graphItems.get(i).getAmount());
                        break;
                    }
                    case "Accomodation": {

                        budgetData.get(1).setAmount(budgetData.get(1).getAmount() + graphItems.get(i).getAmount());
                        break;
                    }
                    case "Transportation": {
                        budgetData.get(2).setAmount(budgetData.get(2).getAmount() + graphItems.get(i).getAmount());
                        break;
                    }
                    case "Savings": {
                        budgetData.get(3).setAmount(budgetData.get(3).getAmount() + graphItems.get(i).getAmount());
                        break;
                    }
                    case "Utilities": {
                        budgetData.get(4).setAmount(budgetData.get(4).getAmount() + graphItems.get(i).getAmount());
                        break;
                    }
                    case "Clothes": {
                        budgetData.get(5).setAmount(budgetData.get(5).getAmount() + graphItems.get(i).getAmount());
                        break;
                    }
                    case "Health": {
                        budgetData.get(6).setAmount(budgetData.get(6).getAmount() + graphItems.get(i).getAmount());
                        break;
                    }
                    case "Education": {
                        budgetData.get(7).setAmount(budgetData.get(7).getAmount() + graphItems.get(i).getAmount());
                        break;
                    }
                    case "Social Events": {
                        budgetData.get(8).setAmount(budgetData.get(8).getAmount() + graphItems.get(i).getAmount());
                        break;
                    }
                    default:
                        System.out.println("Invalid aasdfghgcategory");
                }
            }

        }

        for (int i = 0; i < budgetData.size(); i++) {
            if (budgetData.get(i).getAmount().equals(new Double(0))) {
                //do nothing
            } else {
                dataset.setValue(budgetData.get(i).getName(), budgetData.get(i).getAmount());
            }
        }

 
        return dataset;
    }

  
}
